y = "Drug Offense Rate per 10,000 people") +
theme_minimal()
ggplotly(drugOffenceRateBoxPlot)
summary(bristolCrimeRate %>%
filter(year(Year) == 2022) %>%
left_join(population_2022, by = "Postcode") %>%
filter(`Crime type` == "Drugs" & city == "Bristol, City of"))
summary(bristolCrimeRate %>%
filter(year(Year) == 2022) %>%
left_join(population_2022, by = "Postcode") %>%
filter(`Crime type` == "Drugs" & city == "Bristol, City of") %>%
group_by(Postcode) %>%
summarise(drug_offenses = n(),
population = first(Population)) %>%
mutate(drug_offense_rate = drug_offenses / population * 10000))
drugOffenceRateBoxPlot = bristolCrimeRate %>%
filter(year(Year) == 2022) %>%
left_join(population_2022, by = "Postcode") %>%
filter(`Crime type` == "Drugs" & city == "Bristol, City of") %>%
filter(!is.na(Population)) %>%
group_by(Postcode) %>%
summarise(drug_offenses = n(),
population = first(Population)) %>%
mutate(drug_offense_rate = drug_offenses / population * 10000) %>%
ggplot(aes(x = "", y = drug_offense_rate)) +
geom_boxplot() +
labs(title = "Distribution of Drug Offense Rates in Bristol (2022)",
y = "Drug Offense Rate per 10,000 people") +
theme_minimal()
ggplotly(drugOffenceRateBoxPlot)
cornwallCrimeRate = cornwallCrimeRate %>%
mutate(Postcode = str_extract(postcode_space, "^\\S+ \\d")) %>%
mutate(Year = ymd(paste0(Year, "-01")))
View(cornwallCrimeRate)
bcCrimeRate = bind_rows(bristolCrimeRate, cornwallCrimeRate)
View(bcCrimeRate)
drugOffenceRate = bcCrimeRate %>%
filter(year(Year) == 2022) %>%
left_join(population_2022, by = "Postcode") %>%
filter(`Crime type` == "Drugs") %>%
filter(city == "Bristol, City of" | city == "Cornwall") %>%
filter(!is.na(Population))
View(drugOffenceRate)
colSums(is.na(drugOffenceRate))
colSums(is.na(population_2022))
drugOffenceRate = bcCrimeRate %>%
filter(year(Year) == 2022) %>%
left_join(population_2022, by = "Postcode") %>%
filter(`Crime type` == "Drugs") %>%
filter(city == "Bristol, City of" | city == "Cornwall")
colSums(is.na(drugOffenceRate))
drugOffenceRate = drugOffenceRate %>%
filter(!is.na(Population))
View(drugOffenceRate)
colSums(is.na(drugOffenceRate))
drugOffenceRateBoxPlot = drugOffenceRate %>%
group_by(Postcode, city) %>%
summarise(drug_offenses = n(),
population = first(Population)) %>%
mutate(drug_offense_rate = drug_offenses / population * 10000) %>%
ggplot(aes(x = city, y = drug_offense_rate)) +
geom_boxplot() +
labs(title = "Distribution of Drug Offense Rates in Bristol (2022)",
x = "City",
y = "Drug Offense Rate per 10,000 people") +
theme_minimal()
ggplotly(drugOffenceRateBoxPlot)
drugOffenceRateBoxPlot = drugOffenceRate %>%
group_by(Postcode, city) %>%
summarise(drug_offenses = n(),
population = first(Population)) %>%
mutate(drug_offense_rate = drug_offenses / population * 10000) %>%
ggplot(aes(x = city, y = drug_offense_rate)) +
geom_boxplot() +
labs(title = "Distribution of Drug Offense Rates in Bristol (2022)",
x = "City",
y = "Drug Offense Rate per 10,000 people") +
coord_cartesian(ylim = c(0, 60)) +
theme_minimal()
ggplotly(drugOffenceRateBoxPlot)
drugOffenceRateBoxPlot = drugOffenceRate %>%
group_by(Postcode, city) %>%
summarise(drug_offenses = n(),
population = first(Population)) %>%
mutate(drug_offense_rate = drug_offenses / population * 10000) %>%
ggplot(aes(x = city, y = drug_offense_rate)) +
geom_boxplot() +
labs(title = "Distribution of Drug Offense Rates in Bristol (2022)",
x = "City",
y = "Drug Offense Rate per 10,000 people") +
coord_cartesian(ylim = c(0, 50)) +
theme_minimal()
ggplotly(drugOffenceRateBoxPlot)
drugOffenceRateBoxPlot = drugOffenceRate %>%
group_by(Postcode, city) %>%
summarise(drug_offenses = n(),
population = first(Population)) %>%
mutate(drug_offense_rate = drug_offenses / population * 10000) %>%
ggplot(aes(x = city, y = drug_offense_rate)) +
geom_boxplot() +
labs(title = "Distribution of Drug Offence Rates of 2022 in Bristol and Cornwall county",
x = "County",
y = "Drug Offence Rate per 10,000 people") +
coord_cartesian(ylim = c(0, 50)) +
theme_minimal() +
scale_fill_manual(values = c("Bristol, City of" = "blue", "Cornwall" = "green")) +
scale_x_discrete(labels = c("Bristol, City of" = "Bristol",
"Cornwall" = "Cornwall"))
ggplotly(drugOffenceRateBoxPlot)
drugOffenceRateBoxPlot = drugOffenceRate %>%
group_by(Postcode, city) %>%
summarise(drug_offenses = n(),
population = first(Population)) %>%
mutate(drug_offense_rate = drug_offenses / population * 10000) %>%
ggplot(aes(x = city, y = drug_offense_rate)) +
geom_boxplot() +
labs(title = "Distribution of Drug Offence Rates of 2022 in Bristol and Cornwall county",
x = "County",
y = "Drug Offence Rate per 10,000 people") +
coord_cartesian(ylim = c(0, 50)) +
theme_minimal() +
scale_fill_manual(values = c("Bristol, City of" = "blue", "Cornwall" = "green")) +
scale_x_discrete(labels = c("Bristol, City of" = "Bristol",
"Cornwall" = "Cornwall"))
ggplotly(drugOffenceRateBoxPlot)
drugOffenceRateBoxPlot = drugOffenceRate %>%
group_by(Postcode, city) %>%
summarise(drug_offenses = n(),
population = first(Population)) %>%
mutate(drug_offense_rate = drug_offenses / population * 10000) %>%
ggplot(aes(x = city, y = drug_offense_rate, fill = city)) +
geom_boxplot() +
labs(title = "Distribution of Drug Offence Rates of 2022 in Bristol and Cornwall county",
x = "County",
y = "Drug Offence Rate per 10,000 people") +
coord_cartesian(ylim = c(0, 50)) +
theme_minimal() +
scale_x_discrete(labels = c("Bristol, City of" = "Bristol",
"Cornwall" = "Cornwall"))
ggplotly(drugOffenceRateBoxPlot)
drugOffenceRateBoxPlot = drugOffenceRate %>%
group_by(Postcode, city) %>%
summarise(drug_offenses = n(),
population = first(Population)) %>%
mutate(drug_offense_rate = drug_offenses / population * 10000) %>%
ggplot(aes(x = city, y = drug_offense_rate)) +
geom_boxplot() +
labs(title = "Distribution of Drug Offence Rates of 2022 in Bristol and Cornwall county",
x = "County",
y = "Drug Offence Rate per 10,000 people") +
coord_cartesian(ylim = c(0, 50)) +
theme_minimal() +
scale_x_discrete(labels = c("Bristol, City of" = "Bristol",
"Cornwall" = "Cornwall"))
ggplotly(drugOffenceRateBoxPlot)
drugOffenceRateBoxPlot = drugOffenceRate %>%
group_by(Postcode, city) %>%
summarise(drug_offenses = n(),
population = first(Population)) %>%
mutate(drug_offense_rate = drug_offenses / population * 10000) %>%
ggplot(aes(x = city, y = drug_offense_rate)) +
geom_boxplot() +
labs(title = "Distribution of Drug Offence Rates of 2022 in Bristol and Cornwall county",
x = "County",
y = "Drug Offence Rate per 10,000 people") +
coord_cartesian(ylim = c(0, 50)) +
theme_minimal() +
scale_x_discrete(labels = c("Bristol, City of" = "Bristol",
"Cornwall" = "Cornwall")) +
theme(axis.text.y = element_text(size = 7))
ggplotly(drugOffenceRateBoxPlot)
drugOffenceRateBoxPlot = drugOffenceRate %>%
group_by(Postcode, city) %>%
summarise(drug_offenses = n(),
population = first(Population)) %>%
mutate(drug_offense_rate = drug_offenses / population * 10000) %>%
ggplot(aes(x = city, y = drug_offense_rate)) +
geom_boxplot() +
labs(title = "Distribution of Drug Offence Rates of 2022 in Bristol and Cornwall county",
x = "County",
y = "Drug Offence Rate per 10,000 people") +
coord_cartesian(ylim = c(0, 50)) +
theme_minimal() +
scale_x_discrete(labels = c("Bristol, City of" = "Bristol",
"Cornwall" = "Cornwall")) +
theme(plot.title = element_text(size = 10))
ggplotly(drugOffenceRateBoxPlot)
drugOffenceRateBoxPlot = drugOffenceRate %>%
group_by(Postcode, city) %>%
summarise(drug_offenses = n(),
population = first(Population)) %>%
mutate(drug_offense_rate = drug_offenses / population * 10000) %>%
ggplot(aes(x = city, y = drug_offense_rate)) +
geom_boxplot() +
labs(title = "Distribution of Drug Offence Rates of 2022 in Bristol and Cornwall county",
x = "County",
y = "Drug Offence Rate per 10,000 people") +
coord_cartesian(ylim = c(0, 50)) +
theme_minimal() +
scale_x_discrete(labels = c("Bristol, City of" = "Bristol",
"Cornwall" = "Cornwall")) +
theme(plot.title = element_text(size = 14))
ggplotly(drugOffenceRateBoxPlot)
drugOffenceRateBoxPlot = drugOffenceRate %>%
group_by(Postcode, city) %>%
summarise(drug_offenses = n(),
population = first(Population)) %>%
mutate(drug_offense_rate = drug_offenses / population * 10000) %>%
ggplot(aes(x = city, y = drug_offense_rate)) +
geom_boxplot() +
labs(title = "Distribution of Drug Offence Rates of 2022 in Bristol and Cornwall county",
x = "County",
y = "Drug Offence Rate per 10,000 people") +
coord_cartesian(ylim = c(0, 50)) +
theme_minimal() +
scale_x_discrete(labels = c("Bristol, City of" = "Bristol",
"Cornwall" = "Cornwall")) +
theme(plot.title = element_text(size = 12))
ggplotly(drugOffenceRateBoxPlot)
View(bcCrimeRate)
vehicleCrimeRate = bcCrimeRate %>%
filter(year(Year) == 2022 & month(Year) == 11) %>%
left_join(population_2022, by = "Postcode") %>%
filter(`Crime type` == "Vehicle crime") %>%
filter(city == "Bristol, City of" | city == "Cornwall") %>%
filter(!is.na(Population))
View(vehicleCrimeRate)
dim(vehicleCrimeRate)
colSums(is.na(vehicleCrimeRate))
vehicleCrimeRateSummary = vehicleCrimeRate %>%
group_by(city) %>%
summarise(total_vehicleCrimes = n(),
population = first(Population),
vehicleCrimeRate_per_10000 = (total_vehicleCrimes / population) * 10000
) %>%
select(city, vehicleCrimeRate_per_10000)
vehicleCrimeRateSummary
# Create a dataframe for radar chart
radar_data = vehicleCrimeRateSummary %>%
pivot_wider(names_from = city, values_from = crime_rate_per_10000) %>%
as.data.frame()
install(packages.fmsb)
install.packages(fmsb)
install.packages("fmsb")
library(fmsb)
# Create a dataframe for radar chart
radar_data = vehicleCrimeRateSummary %>%
pivot_wider(names_from = city, values_from = crime_rate_per_10000) %>%
as.data.frame()
# Create a dataframe for radar chart
radar_data = vehicleCrimeRateSummary %>%
pivot_wider(names_from = city, values_from = vehicleCrimeRate_per_10000) %>%
as.data.frame()
# Add the rows required by fmsb package
radar_data = rbind(rep(0, ncol(radar_data)), rep(max(radar_data[,-1], na.rm = TRUE), ncol(radar_data)), radar_data)
# Set up the radar chart
colnames(radar_data) = c("Bristol", "Cornwall")  # Set column names to your cities
# Plot radar chart
radarchart(radar_data,
axistype = 1,
pcol = c("blue", "red"),
pfcol = c("blue", "red"),
plwd = 2,
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
vlcex = 0.8,
title = "Vehicle Crime Rate per 10,000 People in Bristol and Cornwall (Nov 2022)")
# Plot radar chart
radarchart(radar_data,
axistype = 1,
pcol = c("blue", "red"),
pfcol = c("blue", "red"),
plwd = 2,
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
vlcex = 0.8,
title = "Vehicle Crime Rate per 10,000 People in Bristol and Cornwall (Nov 2022)")
vehicleCrimeRateSummary = vehicleCrimeRate %>%
group_by(city, `LSOA name`) %>%
summarise(total_vehicleCrimes = n(),
population = first(Population),
vehicleCrimeRate_per_10000 = (total_vehicleCrimes / population) * 10000) %>%
ungroup()
vehicleCrimeRateSummary
# Create a dataframe for radar chart
radar_data = vehicleCrimeRateSummary %>%
pivot_wider(names_from = `LSOA name`, values_from = vehicleCrimeRate_per_10000, values_fill = list(vehicleCrimeRate_per_10000 = 0)) %>%
as.data.frame()
# Create a dataframe for radar chart
radar_data = vehicleCrimeRateSummary %>%
pivot_wider(names_from = `LSOA name`, values_from = vehicleCrimeRate_per_10000, values_fill = list(vehicleCrimeRate_per_10000 = 0)) %>%
select(-city) %>%
as.data.frame()
# Set up the radar chart
colnames(radar_data) = c("Min", "Max", "Bristol", "Cornwall")
# Plot radar chart
radarchart(radar_data,
axistype = 1,
pcol = c("blue", "red"),
pfcol = c("blue", "red"),
plwd = 2,
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
vlcex = 0.8,
title = "Vehicle Crime Rate per 10,000 People in Bristol and Cornwall (Nov 2022)")
# Plot radar chart
radarchart(radar_data,
axistype = 1,
pcol = c("blue", "red"),
pfcol = c("blue", "red"),
plwd = 2,
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
vlcex = 0.8,
title = "Vehicle Crime Rate per 10,000 People in Bristol and Cornwall (Nov 2022)")
library(tidyverse)
library(plotly)
library(lubridate)
library(fmsb)
# Plot radar chart
radarchart(radar_data,
axistype = 1,
pcol = c("blue", "red"),
pfcol = c("blue", "red"),
plwd = 2,
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
vlcex = 0.8,
title = "Vehicle Crime Rate per 10,000 People in Bristol and Cornwall (Nov 2022)")
# Plot radar chart
radarchart(radar_data,
axistype = 1,
pcol = c("blue", "red"),
pfcol = c(rgb(0, 0, 1, 0.5), rgb(1, 0, 0, 0.5)),
plwd = 2,
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
vlcex = 0.8,
title = "Vehicle Crime Rate per 10,000 People in Bristol and Cornwall (Nov 2022)")
# Add legend
legend(x = "topright", legend = c("Bristol", "Cornwall"), col = c("blue", "red"), lty = 1, lwd = 2)
# Add max values for scaling and dummy variables
max_values = apply(radar_data[-1], 2, max, na.rm = TRUE)
min_values = apply(radar_data[-1], 2, min, na.rm = TRUE)
radar_data = rbind(min_values, max_values, radar_data[-1])
# Set up the radar chart
colnames(radar_data) = c("Min", "Max", "Bristol", "Cornwall")
# Plot radar chart
radarchart(radar_data,
axistype = 1,
pcol = c("blue", "red"),
pfcol = c(rgb(0, 0, 1, 0.5), rgb(1, 0, 0, 0.5)),
plwd = 2,
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
vlcex = 0.8,
title = "Vehicle Crime Rate per 10,000 People in Bristol and Cornwall (Nov 2022)")
# Add legend
legend(x = "topright", legend = c("Bristol", "Cornwall"), col = c("blue", "red"), lty = 1, lwd = 2)
# Pivot data to a wide format for radar chart
radar_data = vehicleCrimeRateSummary %>%
pivot_wider(names_from = city, values_from = vehicleCrimeRate_per_10000, values_fill = list(vehicleCrimeRate_per_10000 = 0))
# Add columns for min and max values
max_value = max(radar_data[-1], na.rm = TRUE)
radar_data = radar_data %>%
bind_rows(summarise_all(., max, na.rm = TRUE)) %>%
bind_rows(summarise_all(., min, na.rm = TRUE)) %>%
arrange(-`LSOA name`) # Arrange so Min and Max are at the beginning
# Set up the radar chart
# Remove unnecessary first row (original Min values row)
radar_data = radar_data[-1, ]
# Set up radar chart
# Adjust column names
colnames(radar_data)[1] = "LSOA"
colnames(radar_data)[2] = "Max"
colnames(radar_data)[3] = "Min"
# Prepare data for radar chart
radar_chart_data = radar_data %>%
pivot_longer(cols = -LSOA, names_to = "City", values_to = "Rate")
# Plot radar chart
radarchart(as.data.frame(t(radar_data[-1])),
axistype = 1,
pcol = c("red", "blue"),
pfcol = c(rgb(1, 0, 0, 0.5), rgb(0, 0, 1, 0.5)),
plwd = 2,
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
vlcex = 0.8,
title = "Vehicle Crime Rate per 10,000 People in Bristol and Cornwall (Nov 2022)")
# Add legend
legend(x = "topright", legend = c("Bristol", "Cornwall"), col = c("blue", "red"), lty = 1, lwd = 2)
# Filter and pivot data for Bristol
bristolRadarData = vehicleCrimeRateSummary %>%
filter(city == "Bristol") %>%
pivot_wider(names_from = `LSOA name`, values_from = vehicleCrimeRate_per_10000, values_fill = list(vehicleCrimeRate_per_10000 = 0))
# Filter and pivot data for Cornwall
cornwallRadarData = vehicleCrimeRateSummary %>%
filter(city == "Cornwall") %>%
pivot_wider(names_from = `LSOA name`, values_from = vehicleCrimeRate_per_10000, values_fill = list(vehicleCrimeRate_per_10000 = 0))
# Filter and pivot data for Bristol
bristolRadarData = vehicleCrimeRateSummary %>%
filter(city == "Bristol, City of") %>%
pivot_wider(names_from = `LSOA name`, values_from = vehicleCrimeRate_per_10000, values_fill = list(vehicleCrimeRate_per_10000 = 0))
# Filter and pivot data for Cornwall
cornwallRadarData = vehicleCrimeRateSummary %>%
filter(city == "Cornwall") %>%
pivot_wider(names_from = `LSOA name`, values_from = vehicleCrimeRate_per_10000, values_fill = list(vehicleCrimeRate_per_10000 = 0))
# Prepare data for radar chart
max_value = max(c(bristolRadarData[-1], cornwallRadarData[-1]), na.rm = TRUE)
min_value = min(c(bristolRadarData[-1], cornwallRadarData[-1]), na.rm = TRUE)
# Add rows for min and max values
bristolRadarData = bristolRadarData %>%
bind_rows(data.frame(city = "Max", `LSOA name` = max_value), .)
cornwallRadarData = cornwallRadarData %>%
bind_rows(data.frame(city = "Max", `LSOA name` = max_value), .)
# Plot radar chart for Bristol
radarchart(as.data.frame(t(bristolRadarData[-1])),
axistype = 1,
pcol = "blue",
pfcol = rgb(0, 0, 1, 0.5),
plwd = 2,
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
vlcex = 0.8,
title = "Vehicle Crime Rate per 10,000 People in Bristol (Nov 2022)")
# Plot radar chart for Cornwall
radarchart(as.data.frame(t(cornwallRadarData[-1])),
axistype = 1,
pcol = "red",
pfcol = rgb(1, 0, 0, 0.5),
plwd = 2,
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
vlcex = 0.8,
title = "Vehicle Crime Rate per 10,000 People in Cornwall (Nov 2022)")
vehicleCrimeRateSummary
# Filter and pivot data for Bristol
bristolRadarData = vehicleCrimeRateSummary %>%
filter(city == "Bristol, City of") %>%
select(`LSOA name`, vehicleCrimeRate_per_10000) %>%
pivot_wider(names_from = `LSOA name`, values_from = vehicleCrimeRate_per_10000, values_fill = list(vehicleCrimeRate_per_10000 = 0))
# Filter and pivot data for Cornwall
cornwallRadarData = vehicleCrimeRateSummary %>%
filter(city == "Cornwall") %>%
select(`LSOA name`, vehicleCrimeRate_per_10000) %>%
pivot_wider(names_from = `LSOA name`, values_from = vehicleCrimeRate_per_10000, values_fill = list(vehicleCrimeRate_per_10000 = 0))
# Prepare data for radar chart
max_value = max(c(bristolRadarData[-1], cornwallRadarData[-1]), na.rm = TRUE)
min_value = min(c(bristolRadarData[-1], cornwallRadarData[-1]), na.rm = TRUE)
# Convert to numeric and handle max/min values
bristol_values <- as.numeric(unlist(bristol_data[-1]))
# Convert to numeric and handle max/min values
bristol_values <- as.numeric(unlist(bristolRadarData[-1]))
cornwall_values <- as.numeric(unlist(cornwallRadarData[-1]))
# Add max and min values for scaling
max_value <- max(c(bristol_values, cornwall_values), na.rm = TRUE)
min_value <- 0
# Add rows for min and max values
bristol_data <- bristol_data %>%
add_row(`LSOA name` = "Max", !!!setNames(rep(max_value, ncol(bristol_data)-1), colnames(bristol_data)[-1])) %>%
add_row(`LSOA name` = "Min", !!!setNames(rep(0, ncol(bristol_data)-1), colnames(bristol_data)[-1]))
cornwallRadarData <- cornwallRadarData %>%
add_row(`LSOA name` = "Max", !!!setNames(rep(max_value, ncol(cornwallRadarData)-1), colnames(cornwallRadarData)[-1])) %>%
add_row(`LSOA name` = "Min", !!!setNames(rep(0, ncol(cornwallRadarData)-1), colnames(cornwallRadarData)[-1]))
# Ensure data is correctly formatted for radarchart function
bristolRadarData <- as.data.frame(t(bristolRadarData[-1]))
cornwallRadarData <- as.data.frame(t(cornwallRadarData[-1]))
# Add rows for min and max values
bristolRadarData <- bristolRadarData %>%
add_row(`LSOA name` = "Max", !!!setNames(rep(max_value, ncol(bristolRadarData)-1), colnames(bristolRadarData)[-1])) %>%
add_row(`LSOA name` = "Min", !!!setNames(rep(0, ncol(bristolRadarData)-1), colnames(bristolRadarData)[-1]))
# Calculate the maximum value for scaling
max_value = max(c(bristol_data, cornwall_data), na.rm = TRUE)
# Calculate the maximum value for scaling
max_value = max(c(bristolRadarData, cornwallRadarData), na.rm = TRUE)
# Calculate the maximum value for scaling
max_value <- max(c(bristol_values, cornwall_values), na.rm = TRUE)
# Add rows for min and max values
bristolRadarData <- bristolRadarData %>%
add_row(`LSOA name` = "Max", !!!setNames(rep(max_value, ncol(bristolRadarData)-1), colnames(bristolRadarData)[-1])) %>%
add_row(`LSOA name` = "Min", !!!setNames(rep(0, ncol(bristolRadarData)-1), colnames(bristolRadarData)[-1]))
# Create a dataframe for radar chart
radar_data = vehicleCrimeRateSummary %>%
pivot_wider(names_from = `LSOA name`, values_from = vehicleCrimeRate_per_10000, values_fill = list(vehicleCrimeRate_per_10000 = 0)) %>%
select(-city) %>%
as.data.frame()
# Add max values for scaling and dummy variables
max_values = rep(max(radar_data[-1], na.rm = TRUE), ncol(radar_data))
radar_data = rbind(rep(0, ncol(radar_data)), max_values, radar_data)
# Set up the radar chart
colnames(radar_data) = c("Min", "Max", "Bristol", "Cornwall")  # Adjust based on your actual cities/regions
# Plot radar chart
radarchart(radar_data,
axistype = 1,
pcol = c("blue", "red"),
pfcol = c("blue", "red"),
plwd = 2,
cglcol = "grey",
cglty = 1,
axislabcol = "grey",
vlcex = 0.8,
title = "Vehicle Crime Rate per 10,000 People in Bristol and Cornwall (Nov 2022)")
